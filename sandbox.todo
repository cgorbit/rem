--------------------------------------------------------------------------------

perun (PHASE_0)
----0. packet_legacy.py _convert_backup_to_v2
----1. job*.result dissapeared when switching back to DummyGraphExecutor
----2. packet.py: waiting_time = max(int(self.waitingDeadline - time.time()), 0) \


freshness@veles02 (PHASE_1)
    0. packet._notify_has_pending_if_need может не создать директорию для SandboxPacket,
       тогда его надо загасить (в текущем виде вообще AssertionError и не стартанёт)

----1. VIVIFY SandboxJobGraphExecutorProxy.time_wait_sched
----X. Не resume'ятся очереди sbx: при рестарте сервера
----0. sky share результатами недоступен в Sandbox
----0. Some suitable way to create FRESHNESS_SCRIPTS resource
----2. Handle KeyError: 'REM_JOBPACKET_EXECUTION_SNAPSHOT'
----3. rem-tool
----    - is_sandbox=True (потому что sandbox_task_id ещё может не быть)
----    - last sandbox_task_id (link to web-page)
----    - resolved_releases?
----3. Add some whole-packet _error_message from sandbox_remote_packet
----   - email notifications
----   - rem-tool
----3. !Retriable/TIME_WAIT для EXCEPTION тасков
----7. Cache locality

    4. пролонгация REM_JOBPACKET_EXECUTOR: через ttl или reshare

----6. Проверить про mapreduce-yt

----5. PENDING not becomes WORKABLE $ rem-tool -q sbx:trofimenkov status
        queue 'sbx:trofimenkov':    {
            'error-lifetime': 604800, 'waited': 0, 'success-lifetime': 259200, 'working': 0, 'working-limit': 1, 'alive': True, 'suspended': 1, 'worked': 1, 'errored': 0, 'pending': 1}

        rem.queue.Queue неправильно переключается между статусами
        (stash@{0}: On master: Fix ->SUSPENDED in SandboxQueue)

    6. FIXME # STOP/SUSPEND->EXECUTING
        def _do_stop_packet(self,
            ...
                or isinstance(e, socket.error) and e.errno == errno.ECONNREFUSED:
            return # FIXME Is enough? # STOP/SUSPEND->EXECUTING
        ...
        def _cancel(self, need_reset):
            ...
            if self.cancelled:
                self._update_state()
                return


production-quality (PHASE_2)
    0. soft_restart, soft_resume
       (soft_reset лучше сделать для ресета тегов)

    0. Пересоздавать таск, если он долго не ENQUE*->EXECUTING, а при этом другие
       таски такой переход осуществляют

----0. Создать группу в Sandbox для USER:LOW приоритета у пользователся robot-rem

    1. ttl на ресурсы выхлопа RUN_REM_JOBPACKET:
       + невозможность сделать rpc_resume, если REM_JOBPACKET_EXECUTION_SNAPSHOT протух
            -> нужно неявно делать pck_restart
            * wait_dep_tags могут быть непустыми из-за legacy behaviour
            ** FIXME Как лучше определять, что причина
                -- протухший REM_JOBPACKET_EXECUTION_SNAPSHOT
                (или, что гораздо менее вероятно, python (и то, если только дефолтный))

----1. latest_release/latest_resource syntax
       - a. резолвинг сразу после create_packet, b. сразу после len(wait_dep_tags) == 0
       - кэш живёт секунд 5
       - pck_re_resolve_resources

????6. различать причины ошибок в RunRemJobPacket
        * Для PHASE_1 можно всё считать Retriable
        # FIXME Но как тогда уведомлять об ошибках, если они Retriable?

        * Разница между Job(tries=5) и этим Retriable в том, что тут я могу
        пытаться понять, какие ошибки на самом деле Permanent, а tries=5 -- это
        очень грубое приближение.

        Retriable:
            - мой код оказался не готов к каким-то вариациям данных
            - не получилось зафетчить ресурс
        Not retriable:
            - ресурса не существует / не существует пути внутри ресурса
              # TODO отличаться temporary ошибку в sync_resource от permanent
              # 1. NoSuchResource, 2. others

????2. stripped.tar instead of symbols.tar.gz (или даже без tar, просто файлы)

    3. PARALLEL resources sync?
        FIXME Почему меня тащили по skynet?
              Потому что локальный sandbox и не работало по HTTP?

    4. python.tar.gz: больше модулей

----5. обновление дефолтного python.tar.gz без рестарта?

    6. per-jobpacket python.tar.gz?

    7. cancel'ить WrongTaskIdError-таски в соответствие текущему стейту:
        1. периодический ping на тасках -- не оперативно, может не быть дырок
    --> 2. при старте с бэкапа получать список работающих тасков и убивать ненужные
