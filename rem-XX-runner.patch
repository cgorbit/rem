diff --git a/rem/context.py b/rem/context.py
index 3a564ca..30aa9c8 100644
--- a/rem/context.py
+++ b/rem/context.py
@@ -103,7 +103,10 @@
 class Context(object):
                 os.path.join(self.logs_directory, config.get("log", "filename")),
                 when="midnight", backupCount=config.getint("log", "rollcount"))
             logHandler.setFormatter(logging.Formatter("%(asctime)s %(levelname)-8s %(module)s:\t%(message)s"))
+            prev_handlers = logger.handlers[:]
             logger.addHandler(logHandler)
+            for h in prev_handlers:
+                logger.removeHandler(h)
         logger.setLevel(logLevel)
 
     def registerScheduler(self, scheduler):
diff --git a/rem/job.py b/rem/job.py
index 10bfbf0..ed36b16 100644
--- a/rem/job.py
+++ b/rem/job.py
@@ -1,5 +1,4 @@
+
+            process = runproc.Popen(
+                run_args,
+                stdout=self.output.name,
+                stdin=self.input.name,
+                stderr=self.error_output.name,
+                cwd=self.packetRef.directory,
+                setpgrp=True
+            )
+
             jobPid = process.pid
+
diff --git a/rem/osspec.py b/rem/osspec.py
index 1315e7e..f23c740 100644
--- a/rem/osspec.py
+++ b/rem/osspec.py
@@ -5,12 +5,39 @@
 def get_shell_location(_cache=[]):
 
 @should_execute_maker(20, 5, Exception)
 def send_email(emails, subject, message):
-    sender = subprocess.Popen(["sendmail"] + map(str, emails), stdin=subprocess.PIPE)
-    print >> sender.stdin, \
+    body = \
         """Subject: %(subject)s
 To: %(email-list)s
 
 %(message)s
 .""" % {"subject": subject, "email-list": ", ".join(emails), "message": message}
-    sender.stdin.close()
-    sender.communicate()
-    return sender.poll()
+    sender = runproc.Popen(["sendmail"] + map(str, emails), stdin_content=body)
+    return sender.wait()
 
 
 def set_process_title(proc_title):
